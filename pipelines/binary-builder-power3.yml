resources:
  - name: binary-builder
    type: git
    source:
      uri: {{binary-builder-git-uri}}
      branch: power-support-part1
  - name: cflinuxfs2
    type: docker-image
    source:
      repository: ppc64le/cflinuxfs2
      tag: "latest"
  - name: buildpacks-ci-image
    type: docker-image
    source:
      repository: 140.211.168.97:5000/buildpacks/ci
      tag: "latest"
      insecure_registries: ["140.211.168.97:5000"]
      username: {{username}}
      password: {{password}}
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}
  - name: builds-out
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}
      git_config:
      - name: user.email
        value: {{name}}
      - name: user.name
        value: {{email}}
  - name: cf-edge-environments
    type: pool
    source:
      branch: resource-pools
      pool: cf-edge-environments
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}

# php php7
<% %w(bower  go bundler composer dotnet glide godep httpd jruby php php7 python node nginx ruby).each do |dep| %>
  - name: <%= dep %>-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}
      paths: [ <%= dep %>-builds.yml ]
      git_config:
      - name: user.email
        value: {{name}}
      - name: user.name
        value: {{email}}
  - name: <%= dep %>-built-output
    type: git
    source:
      branch: binary-built-output
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}
      paths: [ <%= dep %>-built.yml ]
      git_config:
      - name: user.email
        value: {{name}}
      - name: user.name
        value: {{email}}
<% end %>

<% %w(bower composer dotnet glide godep nginx node).each do |auto_dep| %>
  - name: <%= auto_dep %>-builds-in
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}
      paths: [ <%= auto_dep %>-builds.yml ]
      git_config:
      - name: user.email
        value: {{name}}
      - name: user.name
        value: {{email}}
<% end %>

<% %w(bower composer dotnet glide godep nginx node).each do |auto_new| %>
  - name: <%= auto_new %>-new-releases
    type: git
    source:
      uri: {{buildpacks-ci-git-uri}}
      branch: new-release-notifications
      private_key: {{buildpacks-ci-private-key}}
      paths: [ <%= auto_new %>-new.yaml ]
      git_config:
      - name: user.email
        value: {{name}}
      - name: user.name
        value: {{email}}
<% end %>
#php
<% %w(go dotnet-core nodejs ruby php staticfile).each do |language| %>
  - name: <%= language %>-buildpack
    type: git
    source:
      uri: git@github.com:<%= organization %>/<%= language %>-buildpack.git
      private_key: {{buildpack-private-key}} #<%= language %>-buildpack-private-key}}
      branch: develop
      ignore_paths:
        - VERSION
        - CHANGELOG
<% end %>
groups:
  - name: enqueue-automated-builds
    jobs:
<% %w(bower composer dotnet glide godep nginx node).each do |auto_dep| %>
    - trigger-<%= auto_dep %>-build
<% end %>

  - name: automated-builds
    jobs:
<% %w(bower composer dotnet glide godep nginx node).each do |auto_dep| %>
    - build-<%= auto_dep %>
<% end %>
#php: ["nginx", "composer"],
<% {go: ["godep", "glide"], staticfile: ["nginx"],  nodejs: ["node"], ruby: ["node"], php: ["nginx", "composer"], 'dotnet-core' => ['dotnet', 'node', 'bower'] }.each do |buildpack, dependencies| %>
  <% dependencies.each do |dependency| %>
    - update-<%= dependency %>-in-<%= buildpack %>-buildpack
  <% end %>
<% end %>

  - name: manual-builds
    jobs:
    #php php7
<% %w(go  ruby jruby bundler python php php7 httpd).each do |dependency| %>
    - build-<%= dependency %>
<% end %>

  - name: binary-builder-specs
    jobs:
      - binary-builder-specs

jobs:
  - name: binary-builder-specs
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci-image
        - get: cflinuxfs2
        - get: buildpacks-ci
        - get: binary-builder
          trigger: true
      - do:
      #php5 php7
       <% integration_spec_names = %w(bundler glide go godep httpd jruby nginx nodejs php5 php7 dotnet php5_with_oracle php7_with_oracle python ruby url_output yaml_flag) %>
        - task: all-expected-integration-specs-will-run
          image: buildpacks-ci-image
          privileged: true
          file: buildpacks-ci/tasks/binary-builder-integration-spec-presence-power.yml
          params:
            SPEC_NAMES: <%= integration_spec_names.join(',') %>
        - task: all-unit-tests
          image: cflinuxfs2
          privileged: true
          file: buildpacks-ci/tasks/binary-builder-unit-power.yml
          params:
            RUBYGEM_MIRROR: {{rubygem-mirror}}
        - aggregate:
          <% integration_spec_names.each do |spec_name| %>
          - task: integration-<%= spec_name %>
            file: buildpacks-ci/tasks/binary-builder-integration-power.yml
            image: cflinuxfs2
            params:
              SPEC_TO_RUN: <%= spec_name %>
              RUBYGEM_MIRROR: {{rubygem-mirror}}
              EXCLUDE_ON_PPC64LE: true
              BINARY_BUILDER_PLATFORM: {{binary-builder-platform}}
              BINARY_BUILDER_OS_NAME: {{binary-builder-os-name}}
            privileged: true
          <% end %>
          #php php7
<% %w(go  ruby jruby bundler python httpd php php7).each do |dependency| %>
  - name: build-<%= dependency %>
    serial: true
    public: true
    #disable_manual_trigger: true
    plan:
      - aggregate:
        - get: builds-yaml
          resource: <%= dependency %>-builds
          trigger: true
        - get: binary-builder
          passed: [binary-builder-specs]
        - get: buildpacks-ci
       # - get: buildpacks-ci-image
        - get: cflinuxfs2
        - get: built-yaml
          resource: <%= dependency %>-built-output
      - do:
        - task: build-binary
          image: cflinuxfs2
          file: buildpacks-ci/tasks/build-binary-power.yml
          params:
            BINARY_NAME: <%= dependency %>
            GIT_SSH_KEY: {{buildpacks-ci-private-key}}
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            EXCLUDE_ON_PPC64LE: true
            BINARY_BUILDER_PLATFORM: {{binary-builder-platform}}
            BINARY_BUILDER_OS_NAME: {{binary-builder-os-name}}
          privileged: true
        - task: push-binary
          image: cflinuxfs2
          file: buildpacks-ci/tasks/push-binary-power.yml
          params:
            BINARY_NAME: <%= dependency %>
            BUCKET_NAME: {{buildpacks-binaries-s3-bucket}}
            EXCLUDE_ON_PPC64LE: true
            AWS_ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            AWS_SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            AWS_DEFAULT_REGION: us-east-1
          privileged: true
        - put: builds-out
          params:
            repository: builds-yaml-artifacts
            rebase: true
<% end %>

<% %w(bower godep dotnet composer glide nginx node).each do |dependency| %>
  - name: trigger-<%= dependency %>-build
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: new-releases
          resource: <%= dependency %>-new-releases
          trigger: true
        - get: binary-builds
          resource: <%= dependency %>-builds
        - get: buildpacks-ci-image
      - task: queue-binary-build
        privileged: true
        image: buildpacks-ci-image
        file: buildpacks-ci/tasks/queue-dependency-build.yml
        params:
          DEPENDENCY: <%= dependency %>
          RUBYGEM_MIRROR: {{rubygem-mirror}}
      - put: <%= dependency %>-builds
        params:
          repository: binary-builds-artifacts
          rebase: true
  - name: build-<%= dependency %>
    serial: true
    public: true
    plan:
      - aggregate:
        - get: built-yaml
          resource: <%= dependency %>-built-output
        - get: builds-yaml
          resource: <%= dependency %>-builds-in
          version: every
          trigger: true
        - get: binary-builder
          passed: [binary-builder-specs]
        - get: buildpacks-ci
        - get: buildpacks-ci-image
        - get: cflinuxfs2
      - do:
        - task: build-binary
          file: buildpacks-ci/tasks/build-binary-power.yml
          image: cflinuxfs2
          params:
            GIT_SSH_KEY: {{buildpacks-ci-private-key}}
            BINARY_NAME: <%= dependency %>
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            BINARY_BUILDER_PLATFORM: {{binary-builder-platform}}
            BINARY_BUILDER_OS_NAME: {{binary-builder-os-name}}
          privileged: true
#        - put: build-tar
#          params:
#            file: binary-builder-artifacts/original-source-code/*
        - task: push-binary
          file: buildpacks-ci/tasks/push-binary-power.yml
          image: buildpacks-ci-image
          params:
            BINARY_NAME: <%= dependency %>
            BUCKET_NAME: {{buildpacks-binaries-s3-bucket}}
            AWS_ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            AWS_SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            AWS_DEFAULT_REGION: us-east-1
          privileged: true
        - put: builds-out
          resource: <%= dependency %>-built-output
          params:
            repository: builds-yaml-artifacts
            rebase: true
<% end %>
# php: ["nginx", "composer"],
<% {go: ["godep", "glide"], staticfile: ["nginx"], nodejs: ["node"], ruby: ["node"], 'dotnet-core' => ['dotnet', 'node', 'bower'], php: ["nginx", "composer"]}.each do |buildpack, dependencies| %>
  <% dependencies.each do |dependency| %>
  - name: update-<%= dependency %>-in-<%= buildpack %>-buildpack
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: <%= buildpack %>-buildpack
          - get: built-out
            resource: <%= dependency %>-built-output
            passed: [ build-<%= dependency %> ]
            version: every
            trigger: true
          - get: buildpacks-ci-image
        - task: update-dependency-in-manifests
          file: buildpacks-ci/tasks/update-dependency-in-buildpack.yml
          image: buildpacks-ci-image
          privileged: true
          params:
            BUILDPACK_NAME: <%= buildpack %>
            DEPENDENCY: <%= dependency %>
            BUILDPACK_DEPENDENCIES_HOST_DOMAIN: s3.amazonaws.com/buildpacks-store
           # DOMAIN_NAME: {{domain-name}}
        - put: cf-environments
          resource: cf-edge-environments
          params:
            acquire: true
        - do:
          - task: rspec
            file: buildpacks-ci/tasks/test-buildpack-before-auto-update.yml
            privileged: true
            image: buildpacks-ci-image
            params:
              STACKS: cflinuxfs2
             # COMPOSER_GITHUB_OAUTH_TOKEN: !!composer-github-oauth-token}}
              DEPLOYMENT_NAME: '140.211.168.100'
              CF_PASSWORD: {{ci-cf-password}}
              RUBYGEM_MIRROR: {{rubygem-mirror}}
              DOMAIN_NAME: {{domain-name}}
          - put: <%= buildpack %>-buildpack
            params:
              repository: buildpack-artifacts
              rebase: true
          ensure:
            put: cf-edge-environments
            params:
              release: cf-environments
  <% end %>
<% end %>